<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!--
To save map
$rosrun pcl_ros pointcloud_to_pcd input:=ndt_map
or
rostopic pub /config/ndt_mapping_output runtime_manager/ConfigNdtMappingOutput
filter_res
filename
-->
<launch>
<!--
  <param name="use_sim_time" value="true"/>
-->

  <arg name="rviz_file" default="$(find autoware_jit_launch)/rviz/mapping.rviz" />
  <arg name="pcap" default="/media/Data/BAGFILES/ForSlam2016_06/2016_06_03_scu_pcap_crowd_/pcap/pcap-000" />
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="min_range" default="2.4" />
  <arg name="max_range" default="130.0" />

  <arg name="tf_x" default="1.77" />
  <arg name="tf_y" default="0.010" />
  <arg name="tf_z" default="1.52" />
  <arg name="tf_yaw" default="0.0" />
  <arg name="tf_pitch" default="0.13" />
  <arg name="tf_roll" default="0.0" />

  <param name="tf_x" value="$(arg tf_x)" />
  <param name="tf_y" value="$(arg tf_y)" />
  <param name="tf_z" value="$(arg tf_z)" />
  <param name="tf_yaw" value="$(arg tf_yaw)" />
  <param name="tf_pitch" value="$(arg tf_pitch)" />
  <param name="tf_roll" value="$(arg tf_roll)" />

<!--
<include file="$(find runtime_manager)/scripts/setup_tf.launch" />
-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="baselink_to_velodyne"         args="$(arg tf_x) $(arg tf_y) $(arg tf_z) $(arg tf_yaw) $(arg tf_pitch) $(arg tf_roll)  /base_link /velodyne " />
  <include file="$(find model_publisher)/launch/vehicle_model.launch" >
    <arg name="model_path" default="$(find scu_data)/3d_model/golf_cart1/golf_cart1.urdf" />
  </include>

  <!--data play -->
    <!--
      <node pkg="rosbag" type="play" name="rosbag" args=" _ _ clock  8tags.bag"/>
    -->
<!--
    OR rosrun velodyne_driver velodyne_node _mol:=VLP16 _pcap:=/media/Data/BAGFILES/ForSlam2016_06/2016_06_03_scu_fast_shuttles_pcap/pcap/pcap-000 _read_once:=true
-->
      <!-- start nodelet manager and driver nodelets -->
      <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
        <arg name="model" value="VLP16"/>
        <arg name="read_once" value="true"/>
        <arg name="rpm" value="600"/>
        <arg name="frame_id" value="velodyne"/>
        <arg name="pcap" value="$(arg pcap)"/>
      </include>

      <!-- start cloud nodelet -->
      <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
        <arg name="calibration" value="$(arg calibration)"/>
        <arg name="min_range" value="$(arg min_range)"/>
        <arg name="max_range" value="$(arg max_range)"/>
<!--
        <arg name="view_direction" value="0.0"/>
        <arg name="view_width" value="6.28318530718"/>
-->
      </include>


  <!-- mapping -->
  <!-- ndt_localizer ndt_mapping.launch -->
    <!-- send table.xml to param server -->
    <arg name="range" default="5.0" /> <!-- min range for mapping -->
    <arg name="shift" default="1.0" /><!-- min pos shift required to add to map -->
    <arg name="use_openmp" default="true" /><!-- parallel -->

<!--
rostopic pub /config/ndt_mapping runtime_manager/ConfigNdtMapping
ndt_res : default:1.0  Resolution of NDT grid structure (VoxelGridCovariance)
step_size:  default:0.1 maximum step size for More-Thuente line search.
trans_eps : default:0.01 minimum transformation difference for termination condition.
voxel_leaf_size : dafault: 1.0  (in code 2.0) VoxelGrid input filtering

iter: 30  : max number of registration iterations.
-->
    <!-- rosrun ndt_localizer ndt_mapping  -->
    <node pkg="ndt_localizer" type="queue_counter" name="queue_counter" output="screen" />
    <node pkg="ndt_localizer" type="ndt_mapping" name="ndt_mapping" output="screen">
      <param name="range" value="$(arg range)" />
      <param name="shift" value="$(arg shift)" />
      <param name="use_openmp" value="$(arg use_openmp)" />
      <remap from="/points_raw" to="/velodyne_points" />
    </node>

    <!-- rviz visualization-->
<!--
    <param name="robot_description" textfile="$(find scu_data)/3d_model/golf_cart1/golf_cart1.urdf"/>
-->
    <node pkg="rviz" type="rviz" name="$(anon rviz)" args="-d $(arg rviz_file)" output="screen" />
</launch>
